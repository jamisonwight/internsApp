p,
h3,
a,
button,
table,
.connected,
.disconnected,
.status, {
  font-family: "Nunito" !important;
}

.bold {
  font-weight: 600;
}

body {
  background: rgba(238,238,238, 1);
}

.well,
td {
  border: none !important;
}

i {
  cursor: pointer;
  padding: .5rem;
  margin: auto;
  font-size: 2rem;
  width: 4rem;
}

td,
th {
  text-align: center;
  color: #ef9a9a;
}

.panel,
.panel td,
.panel th {
  color: #2c7fc7; 
}

.underline {
  font-family: "Pacifico" !important;
  font-size: 4rem;
  padding-bottom: 4rem;
  color: #2c7fc7;
}

.well {
  margin-top: 5rem;
  box-shadow: 2px 2px 2px 1px rgba(0, 0, 0, .2)
}


input,
input[type="submit"],
input[type="text"],
input[type="number"],
.btn-blue,
select {
  border: none !important;
  padding: 1rem 3rem !important;
  height: 4.5rem !important;
}

.btn-blue {
  background: #2c7fc7 !important;
  color: #ef9a9a;
  font-weight: bold;
  font-size: 1.5rem;
  border-radius: .4rem;
}

form h1 {
  font-size: 3.5rem;
  padding-bottom: 2rem;
}

form h2 {
  padding-top: 2rem;
}

form h3 {
  font-size: 1.5rem;
}


label {
  display: block;
  text-align: left;
}

.internPrograms {
  color: #03A9F4;
}
.internProgramsCount {
  color: #A5D6A7;
}
.internRemove,
.programRemove {
  color: #e57373;
}
.gradeEdit {
  color: #FFB300
}

.counter {
  position: relative;
  color: #ef9a9a;
  top: -.3rem;
  left: .6rem;
  z-index: 3;
  font-size: 1.5rem;
  font-weight: bold;
}

tr {
   -webkit-transition: opacity 2.0s ease-in;
       -moz-transition: opacity 2.0s ease-in;
         -o-transition: opacity 2.0s ease-in;
                                  opacity: 1;
}

.alert {
  color: white;
  -webkit-transition: all 2.0s ease-in;
       -moz-transition: all 2.0s ease-in;
         -o-transition: all 2.0s ease-in;
                                  opacity: 1;
}

.box-blue {
  background: #0277BD;
  color: #ffffff;
  padding: 5rem;
  border-radius: .4rem;
  box-shadow: 2px 2px 3px 2px rgba(2,119,189, 1)
}

.box-grey {
  width: 60rem;
  background: rgba(238,238,238, 1);
  color: #ef9a9a;
  padding: 5rem;
  border-radius: .4rem;
  box-shadow: 2px 2px 2px 2px rgba(0, 0, 0, .1)
}

.box-grey form {
  padding-top: 1rem;
}

.box-grey h1 {
  text-align: center;
  font-size: 2.5rem;
}

.register-link {
  padding-top: 1rem;
}

.login {
  text-align: center;
}
.login span{
  font-size: 2.5rem;
}
.login a {
  margin-top: 1.5rem;
}

.hide {
  display: none;
}

.show {
  display: block;
}

.fixed {
  position: fixed;
  top: 50%;
  right: 0;
  left: 0;
  transform: translateY(-50%);
  margin: auto;
  z-index: 4;
}

.fade-in {
	opacity: 1;
	animation-name: fadeInOpacity;
	animation-iteration-count: 1;
	animation-timing-function: ease-in;
	animation-duration: .6s
}

@keyframes fadeInOpacity {
	0% {
		opacity: 0;
	}
	100% {
		opacity: 1;
	}
}

.fade-in-out {
	opacity: 0;
	animation-name: fadeInOut;
	animation-iteration-count: 1;
	animation-timing-function: ease-in;
	animation-duration: 4s
}

@keyframes fadeInOut {
	0% {
		opacity: 0;
	}
	30% {
		opacity: 1;
	}
  60% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}


.dialog {
  color: white;
  background: #0277BD;
  border: none;
  border-radius: .4rem;
  padding: 5rem;
  box-shadow: 2px 2px 5px 2px rgba(0, 0, 0, .2)
}


.status-block {
  position: fixed;
  right: 1.4rem;
  bottom: 0;
  padding: .2rem 2rem;
  background: #e57373;
  border-radius: .4rem;
  box-shadow: 2px 2px 5px 2px rgba(0, 0, 0, .2);
  color: #ffffff;
  margin: auto;
  z-index: 6;
}

.status-block h1,
.status-notification h1 {
  padding: 1rem;
  line-height: 2.5rem;
}

.status-notification {
  position: fixed;
  left: 1.4rem;
  bottom: 2rem;
  padding: .2rem 2rem;
  background: #ecf0f1;
  border-radius: .4rem;
  box-shadow: 2px 2px 5px 2px rgba(0, 0, 0, .2);
  color: #e57373;
  margin: auto;
  z-index: 6;
}

/* Using the previous lab, add the following

    Add a column to put the number of programs the user has, just a number, or "-" if empty
    
    User name should be an a tag, when clicked it should open a panel under the table with the user details: id, name and programs, programs its a list with the grade: e.g.
        Java 80 - Remove
        JavaScript 90 - Remove
        
    User can add or remove programs to each user
    
    Click on add program button will show a popup where they can select the program and add the grade, grade must be numeric 0 - 100, programs must be from a set list of programs hardcoded, input must be a filteringselect with a store
    
    Clicking on the program name will display a pop-up to change the grade
    
    Pop-up button should be add or save
    
    Code must have a clear separation of view (html), model (intern, program) and controller (app logic, views updates) */